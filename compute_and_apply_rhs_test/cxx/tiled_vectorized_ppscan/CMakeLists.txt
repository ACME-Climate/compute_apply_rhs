INCLUDE_DIRECTORIES (${KOKKOS_PATH}/include)

SET (TINMAN_EXEC_SPACE "Default" CACHE STRING "Select the kokkos exec space")

STRING (TOUPPER ${TINMAN_EXEC_SPACE} TINMAN_EXEC_SPACE_UPPER)
IF (${TINMAN_EXEC_SPACE_UPPER} STREQUAL "CUDA")
  SET (HOMMEXX_CUDA_SPACE ON)
ELSEIF (${TINMAN_EXEC_SPACE_UPPER} STREQUAL "OPENMP")
  SET (HOMMEXX_OPENMP_SPACE ON)
ELSEIF (${TINMAN_EXEC_SPACE_UPPER} STREQUAL "THREADS")
  SET (HOMMEXX_THREADS_SPACE ON)
ELSEIF (${TINMAN_EXEC_SPACE_UPPER} STREQUAL "SERIAL")
  SET (HOMMEXX_SERIAL_SPACE ON)
ELSEIF (${TINMAN_EXEC_SPACE_UPPER} STREQUAL "DEFAULT")
  SET (HOMMEXX_DEFAULT_SPACE ON)
ELSE()
  MESSAGE (ABORT "Invalid choice for 'TINMAN_EXEC_SPACE'. Valid options (case insensitive) are 'Cuda', 'OpenMP', 'Threads', 'Serial', 'Default'")
ENDIF()

SET(TEST_SRCS
  kokkos_init.cpp
  Control.cpp
  Derivative.cpp
  Elements.cpp
  gptl/gptl.c
  gptl/GPTLutil.c
)

INCLUDE_DIRECTORIES (${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})

CONFIGURE_FILE (${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h.c)
ADD_EXECUTABLE(tiled_vectorized_ppscan ${TEST_SRCS})

IF(${CUDA_BUILD})
  TARGET_COMPILE_OPTIONS(tiled_vectorized_ppscan PUBLIC -expt-extended-lambda -lineinfo -arch=sm_60 -maxrregcount 64)
ENDIF()

IF (KOKKOS_CMAKE_BUILD)
  SET(Kokkos_LIBRARIES "kokkoscore")
ELSE()
  SET(Kokkos_LIBRARIES "kokkos")
ENDIF()

TARGET_LINK_LIBRARIES(tiled_vectorized_ppscan -lrt ${Kokkos_LIBRARIES} -L${KOKKOS_PATH}/lib)
IF (HWLOC_LIBRARY_DIRS)
  TARGET_LINK_LIBRARIES(tiled_vectorized_ppscan hwloc numa -L${HWLOC_LIBRARY_DIRS})
ENDIF()

SET_TARGET_PROPERTIES(tiled_vectorized_ppscan PROPERTIES LINKER_LANGUAGE CXX)
